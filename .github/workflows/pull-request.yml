# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

env:
 VITE_NAME: something
 VITE_VERSION: 0.0.0
 VITE_FIREBASE_API_KEY: AIzaSyCloNU1l5Otyv6xvt8i24n1EZHu2QsLybs
 VITE_FIREBASE_AUTH_DOMAIN: owlsinternal.firebaseapp.com
 VITE_FIREBASE_DATABASE_URL: https://owlsinternal-default-rtdb.europe-west1.firebasedatabase.app
 VITE_FIREBASE_PROJECT_ID: owlsinternal
 VITE_FIREBASE_STORAGE_BUCKET: owlsinternal.appspot.com
 VITE_FIREBASE_MESSAGING_SENDER_ID: 73057071136
 VITE_FIREBASE_APP_ID: 1:73057071136:web:3c7d4c53730e020b620c45
 VITE_FIREBASE_MEASUREMENT_ID: G-RB4FJWXLZK
 VITE_SENTRY: false
 VITE_SENTRY_ENVIRONMENT: prod
 VITE_SENTRY_DSN: https://d171647c012c43a39dec2948de46cf2e@o1407901.ingest.sentry.io/6743125
 VITE_SENTRY_PROJECT: internal-frontend
 VITE_OPENREPLAY: false
 VITE_OPENREPLAY_PROJECTKEY: R8C4sH0aQVI5ctsw6MfJ

concurrency:
  group: ${{ github.ref }}-pull-request
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write
  checks: write

name: Stage on PR
on: pull_request
jobs:
  eslint:
    name: ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.json
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  dependency-review:
    name: Dependency review
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v2

  download-dependencies:
    name: Download dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - eslint
      - dependency-review
      - download-dependencies
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1

      - name: SetVITE_NAME
        run: echoVITE_NAME=${{ steps.package.outputs.name }} >> $GITHUB_ENV

      - name: SetVITE_VERSION
        run: echoVITE_VERSION=${{ steps.package.outputs.version }} >> $GITHUB_ENV

      - run: npm run build

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/
          retention-days: 1

  scanner-CodeQL:
    name: CodeQL scanner
    runs-on: ubuntu-latest
    needs: build
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test-unit-coverage:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Run the tests
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        if: github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-firebase-rules:
    name: Firebase rules tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache firebase emulators
        id: cache-firebase-emulators
        uses: actions/cache@v3
        env:
          cache-name: cache-firebase-emulators
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Run the tests
        run: npm run test:firestore:rules

      - name: Print debug logs
        if: failure()
        run: |
          java --version
          ls -la
          find . -type f -name "fire*-debug.log" | xargs cat

  test-e2e:
    name: 'BrowserStack test'
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache firebase emulators
        id: cache-firebase-emulators
        uses: actions/cache@v3
        env:
          cache-name: cache-firebase-emulators
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: 'Running application under test'
        run: ./node_modules/.bin/serve -s build -l 3000 &

      - name: 'BrowserStack Env Setup'
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

      - name: 'BrowserStack Local Tunnel Setup'
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random

      - name: Generate config for browserstack
        run: |
          sed -i -r '/^(buildName|projectName|userName|accessKey|browserstackLocal|localIdentifier):.*$/d' browserstack.yml
          echo "buildName: '$BROWSERSTACK_BUILD_NAME'" >> browserstack.yml
          echo "projectName: '$BROWSERSTACK_PROJECT_NAME'" >> browserstack.yml
          echo "userName: ${{ secrets.BROWSERSTACK_USERNAME }}" >> browserstack.yml
          echo "accessKey: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}" >> browserstack.yml
          echo "browserstackLocal: true" >> browserstack.yml
          echo "localIdentifier: $BROWSERSTACK_LOCAL_IDENTIFIER" >> browserstack.yml

      - name: 'Running test on BrowserStack'
        continue-on-error: true
        run: npm run test:e2e:browserstack

      - name: 'BrowserStackLocal Stop'  # Terminating the BrowserStackLocal tunnel connection
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: stop

  dependabot:
    name: 'Dependabot auto merge'
    runs-on: ubuntu-latest
    needs:
      - scanner-CodeQL
      - test-unit-coverage
      - test-firebase-rules
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  staging:
    name: 'Deploy to PR staging'
    runs-on: ubuntu-latest
    needs:
      - test-unit-coverage
      - test-firebase-rules
      - test-e2e
      - scanner-CodeQL
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_OWLSINTERNAL }}"
          projectId: owlsinternal
