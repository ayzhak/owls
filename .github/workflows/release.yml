# This file was auto-generated by the Context CLI
# https://github.com/firebase/firebase-tools

env:
 VITE_NAME: something
 VITE_VERSION: 0.0.0
 VITE_FIREBASE_API_KEY: AIzaSyCloNU1l5Otyv6xvt8i24n1EZHu2QsLybs
 VITE_FIREBASE_AUTH_DOMAIN: owlsinternal.firebaseapp.com
 VITE_FIREBASE_DATABASE_URL: https://owlsinternal-default-rtdb.europe-west1.firebasedatabase.app
 VITE_FIREBASE_PROJECT_ID: owlsinternal
 VITE_FIREBASE_STORAGE_BUCKET: owlsinternal.appspot.com
 VITE_FIREBASE_MESSAGING_SENDER_ID: 73057071136
 VITE_FIREBASE_APP_ID: 1:73057071136:web:3c7d4c53730e020b620c45
 VITE_FIREBASE_MEASUREMENT_ID: G-RB4FJWXLZK
 VITE_SENTRY_ENABLED: true
 VITE_SENTRY_ENVIRONMENT: prod
 VITE_SENTRY_DSN: https://d171647c012c43a39dec2948de46cf2e@o1407901.ingest.sentry.io/6743125
 VITE_SENTRY_ORG: owls-q7
 VITE_SENTRY_PROJECT: internal-frontend
 VITE_OPENREPLAY_ENABLED: true
 VITE_OPENREPLAY_PROJECTKEY: R8C4sH0aQVI5ctsw6MfJ

name: Release
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-release
  cancel-in-progress: true

jobs:
  eslint:
    name: ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.json
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  download-dependencies:
    name: Download dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs:
      - eslint
      - download-dependencies
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1

      - name: Set VITE_NAME
        run: echo VITE_NAME=${{ steps.package.outputs.name }} >> $GITHUB_ENV

      - name: SetVITE_VERSION
        run: echo VITE_VERSION=${{ steps.package.outputs.version }} >> $GITHUB_ENV

      - run: npm run build

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build
            browserstack.yml

  scanner-CodeQL:
    name: CodeQL Scanner
    runs-on: ubuntu-latest
    needs: build
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test-unit-coverage:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Run the tests
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-e2e:
    name: 'BrowserStack test'
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache firebase emulators
        id: cache-firebase-emulators
        uses: actions/cache@v3
        env:
          cache-name: cache-firebase-emulators
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: 'Running application under test'
        run: ./node_modules/.bin/serve -s build -l 3000 &

      - name: 'BrowserStack Env Setup'
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

      - name: 'BrowserStack Local Tunnel Setup'
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random

      - name: Generate config for browserstack
        run: |
          sed -i -r '/^(buildName|projectName|userName|accessKey|browserstackLocal|localIdentifier):.*$/d' browserstack.yml
          echo "buildName: '$BROWSERSTACK_BUILD_NAME'" >> browserstack.yml
          echo "projectName: '$BROWSERSTACK_PROJECT_NAME'" >> browserstack.yml
          echo "userName: ${{ secrets.BROWSERSTACK_USERNAME }}" >> browserstack.yml
          echo "accessKey: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}" >> browserstack.yml
          echo "browserstackLocal: true" >> browserstack.yml
          echo "localIdentifier: $BROWSERSTACK_LOCAL_IDENTIFIER" >> browserstack.yml

      - name: 'Running test on BrowserStack'
        continue-on-error: true
        run: npm run test:e2e:browserstack

      - name: 'BrowserStackLocal Stop'  # Terminating the BrowserStackLocal tunnel connection
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: stop

  test-firebase-rules:
    name: 'Firebase rules test'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache firebase emulators
        id: cache-firebase-emulators
        uses: actions/cache@v2
        env:
          cache-name: cache-firebase-emulators
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Run the tests
        run: npm run test:firestore:rules

      - name: Print debug logs
        if: failure()
        run: |
          java --version
          ls -la
          find . -type f -name "fire*-debug.log" | xargs cat

  deploy_hosting:
    name: Deploy to Firebase Hosting
    runs-on: ubuntu-latest
    needs:
      - test-unit-coverage
      - test-e2e
      - test-firebase-rules
      - scanner-CodeQL
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_OWLSINTERNAL }}
          channelId: live
          projectId: owlsinternal

  deploy_functions:
    name: Deploy to Firebase Functions
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs:
      - test-unit-coverage
      - test-e2e
      - test-firebase-rules
      - scanner-CodeQL
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Create SA key
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMIN }}' > $HOME/gcloud.json

      - name: Deploy Cloud Functions
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json
          npx firebase-tools use ${{ env.VITE_FIREBASE_PROJECT_ID }}
          npx firebase-tools deploy --only functions --json

  deploy_rules_firestore:
    name: Deploy to Firebase Firestore Rules
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs:
      - test-unit-coverage
      - test-e2e
      - test-firebase-rules
      - scanner-CodeQL
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Create SA key
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMIN }}' > $HOME/gcloud.json

      - name: Deploy Cloud Functions
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json
          npx firebase-tools use ${{ env.VITE_FIREBASE_PROJECT_ID }}
          npx firebase-tools deploy --only firestore:rules --json

  deploy_remoteconfig:
    name: Deploy to Firebase Remoteconfig
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs:
      - test-unit-coverage
      - test-e2e
      - test-firebase-rules
      - scanner-CodeQL
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Create SA key
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMIN }}' > $HOME/gcloud.json

      - name: Deploy Cloud Functions
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json
          npx firebase-tools use ${{ env.VITE_FIREBASE_PROJECT_ID }}
          npx firebase-tools deploy --only remoteconfig --json

  sentry-release:
    name: Create Sentry release
    runs-on: ubuntu-latest
    needs:
      - deploy_remoteconfig
      - deploy_rules_firestore
      - deploy_functions
      - deploy_hosting
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1

      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ env.VITE_SENTRY_ORG }}
          SENTRY_PROJECT: ${{ env.VITE_SENTRY_PROJECT }}
        with:
          tagName: ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }}
          environment: ${{ env.VITE_SENTRY_ENVIRONMENT }}
